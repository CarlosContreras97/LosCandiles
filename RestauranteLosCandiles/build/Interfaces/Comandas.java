/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;


import Clases.ConsultaEmpleadoComanda;
import Clases.ConsultaProductosDetalleComanda;
import Conexion.ConexionLosCandiles;
import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author StalinMacias
 */
public class Comandas extends javax.swing.JFrame {

    //Declaraci√≥n de variables para hacer la conexion a SQL
    ConexionLosCandiles con= new ConexionLosCandiles();
    CallableStatement cst;
    ResultSet r;
    Statement sentencia;
    DefaultTableModel comandasTableModel;
    //Variable para determinar con que tipo se hara la busqueda
    int posicionFiltro;
    //Variable para la busqueda dinamica
    private TableRowSorter trsfiltro;
    
    
    public Comandas() {
        initComponents();
        
        ConexionLosCandiles con= new ConexionLosCandiles();
        txtTotal.setEnabled(false);
        txtTotal.setText("0");
        
        panelLista.setVisible(false);
        
        cargarComandas();
        formatojTableComandas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelComandas = new jcMousePanel.jcMousePanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        txtIDEmpleado = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtIDComanda = new javax.swing.JTextField();
        txtFechaComanda = new javax.swing.JTextField();
        btnCrearComanda = new org.edisoncor.gui.button.ButtonTask();
        txtNombreEmpleado = new javax.swing.JTextField();
        txtMesa = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtComentarios = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaComandas = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        searchFieldComanda = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        searchFilterComanda = new javax.swing.JComboBox<>();
        jPanel30 = new javax.swing.JPanel();
        BtnModificarDatosComanda = new org.edisoncor.gui.button.ButtonTask();
        btnVerDetalleComanda = new org.edisoncor.gui.button.ButtonTask();
        jPanel21 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        btnVolver = new org.edisoncor.gui.button.ButtonColoredAction();
        panelLista = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelComandas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondoEmpleados.jpg"))); // NOI18N

        jPanel19.setBackground(new java.awt.Color(255, 153, 51));
        jPanel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel19MousePressed(evt);
            }
        });
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel23.setBackground(new java.awt.Color(255, 153, 51));
        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Comandas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N
        jPanel23.setToolTipText("");
        jPanel23.setName(""); // NOI18N
        jPanel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel23MouseClicked(evt);
            }
        });
        jPanel23.setLayout(null);

        txtIDEmpleado.setBackground(new java.awt.Color(255, 204, 102));
        txtIDEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDEmpleadoActionPerformed(evt);
            }
        });
        jPanel23.add(txtIDEmpleado);
        txtIDEmpleado.setBounds(300, 30, 100, 28);

        jPanel27.setBackground(new java.awt.Color(255, 204, 153));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Empleado:");
        jPanel27.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 110, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("ID Comanda:");
        jPanel27.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 110, 20));

        jLabel26.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Mesa");
        jPanel27.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 110, 30));

        jLabel30.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 51, 51));
        jLabel30.setText("Fecha Comanda:");
        jPanel27.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 110, 30));

        jPanel23.add(jPanel27);
        jPanel27.setBounds(10, 100, 100, 140);

        txtIDComanda.setBackground(new java.awt.Color(255, 204, 102));
        txtIDComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDComandaActionPerformed(evt);
            }
        });
        txtIDComanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDComandaKeyTyped(evt);
            }
        });
        jPanel23.add(txtIDComanda);
        txtIDComanda.setBounds(120, 100, 100, 28);

        txtFechaComanda.setBackground(new java.awt.Color(255, 204, 102));
        txtFechaComanda.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        txtFechaComanda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFechaComanda.setText("aaaa/mm/dd");
        txtFechaComanda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaComandaFocusGained(evt);
            }
        });
        txtFechaComanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaComandaKeyReleased(evt);
            }
        });
        jPanel23.add(txtFechaComanda);
        txtFechaComanda.setBounds(120, 210, 190, 29);

        btnCrearComanda.setBorder(null);
        btnCrearComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconAddBuy.png"))); // NOI18N
        btnCrearComanda.setText("Crear Comanda");
        btnCrearComanda.setDescription(" ");
        btnCrearComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearComandaActionPerformed(evt);
            }
        });
        jPanel23.add(btnCrearComanda);
        btnCrearComanda.setBounds(50, 40, 210, 50);

        txtNombreEmpleado.setBackground(new java.awt.Color(255, 204, 102));
        txtNombreEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEmpleadoActionPerformed(evt);
            }
        });
        txtNombreEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreEmpleadoKeyTyped(evt);
            }
        });
        jPanel23.add(txtNombreEmpleado);
        txtNombreEmpleado.setBounds(120, 140, 210, 28);

        txtMesa.setBackground(new java.awt.Color(255, 204, 102));
        txtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesaActionPerformed(evt);
            }
        });
        txtMesa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMesaKeyTyped(evt);
            }
        });
        jPanel23.add(txtMesa);
        txtMesa.setBounds(120, 170, 100, 30);

        jPanel28.setBackground(new java.awt.Color(255, 204, 153));
        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 51, 51));
        jLabel31.setText("Total:");
        jPanel28.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 30));

        jLabel32.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(51, 51, 51));
        jLabel32.setText("Comentarios:");
        jPanel28.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 90, 30));

        jPanel23.add(jPanel28);
        jPanel28.setBounds(470, 30, 90, 190);

        txtTotal.setBackground(new java.awt.Color(255, 204, 102));
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalKeyTyped(evt);
            }
        });
        jPanel23.add(txtTotal);
        txtTotal.setBounds(580, 30, 120, 30);

        txtComentarios.setBackground(new java.awt.Color(255, 204, 102));
        txtComentarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComentariosKeyReleased(evt);
            }
        });
        jPanel23.add(txtComentarios);
        txtComentarios.setBounds(580, 70, 380, 150);

        jPanel19.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 970, 270));

        tablaComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaComandas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaComandasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaComandasMousePressed(evt);
            }
        });
        tablaComandas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaComandasKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tablaComandas);

        jPanel19.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 970, 190));

        jPanel26.setBackground(new java.awt.Color(255, 204, 102));
        jPanel26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel19.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 370, -1));

        jPanel25.setBackground(new java.awt.Color(255, 204, 102));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Busqueda"));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchFieldComanda.setBackground(new java.awt.Color(255, 204, 102));
        searchFieldComanda.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        searchFieldComanda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchFieldComanda.setText("Ingrese su Busqueda");
        searchFieldComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldComandaMouseClicked(evt);
            }
        });
        searchFieldComanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldComandaKeyTyped(evt);
            }
        });
        jPanel25.add(searchFieldComanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 190, 30));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconSearch.png"))); // NOI18N
        jPanel25.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 30, 30));

        searchFilterComanda.setBackground(new java.awt.Color(255, 102, 102));
        searchFilterComanda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empleado" }));
        jPanel25.add(searchFilterComanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 180, 30));

        jPanel19.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 580, 60));

        jPanel30.setBackground(new java.awt.Color(255, 153, 51));
        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones Comandas Registradas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N
        jPanel30.setToolTipText("");
        jPanel30.setName(""); // NOI18N
        jPanel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel30MouseClicked(evt);
            }
        });
        jPanel30.setLayout(null);

        BtnModificarDatosComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconModify.png"))); // NOI18N
        BtnModificarDatosComanda.setText("Modificar Datos Comanda");
        BtnModificarDatosComanda.setDefaultCapable(false);
        BtnModificarDatosComanda.setDescription(" ");
        BtnModificarDatosComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarDatosComandaActionPerformed(evt);
            }
        });
        jPanel30.add(BtnModificarDatosComanda);
        BtnModificarDatosComanda.setBounds(10, 20, 310, 50);

        btnVerDetalleComanda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icono-reportes.png"))); // NOI18N
        btnVerDetalleComanda.setText("Ver Detalle Comanda");
        btnVerDetalleComanda.setDefaultCapable(false);
        btnVerDetalleComanda.setDescription(" ");
        btnVerDetalleComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetalleComandaActionPerformed(evt);
            }
        });
        jPanel30.add(btnVerDetalleComanda);
        btnVerDetalleComanda.setBounds(370, 20, 260, 50);

        jPanel19.add(jPanel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 640, 80));

        jPanel21.setBackground(new java.awt.Color(255, 204, 102));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jLabel20.setText("COMANDAS");
        jPanel21.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 290, 60));

        jPanel19.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 300, 60));

        btnVolver.setBackground(new java.awt.Color(204, 102, 0));
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel19.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, 110, 50));

        javax.swing.GroupLayout panelComandasLayout = new javax.swing.GroupLayout(panelComandas);
        panelComandas.setLayout(panelComandasLayout);
        panelComandasLayout.setHorizontalGroup(
            panelComandasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
            .addGroup(panelComandasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelComandasLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelComandasLayout.setVerticalGroup(
            panelComandasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(panelComandasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelComandasLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                listaFocusLost(evt);
            }
        });
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lista);

        javax.swing.GroupLayout panelListaLayout = new javax.swing.GroupLayout(panelLista);
        panelLista.setLayout(panelListaLayout);
        panelListaLayout.setHorizontalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelListaLayout.setVerticalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(panelLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(642, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelComandas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addComponent(panelLista, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelComandas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDEmpleadoActionPerformed

    private void txtIDComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDComandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDComandaActionPerformed

    private void txtFechaComandaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaComandaFocusGained
        txtFechaComanda.setText("");
    }//GEN-LAST:event_txtFechaComandaFocusGained

    private void txtFechaComandaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaComandaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaComandaKeyReleased

    private void btnCrearComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearComandaActionPerformed
        //CHECAR COMO CASTEAR DE STRING A DATE PARA PODER INSERTAR EN LA BASE DE DATOS LAS FECHAS :v
        String stringFecha = txtFechaComanda.getText();
        java.util.Date fechaConvertida = null;
        java.sql.Date sqlDate = null;
        
        try {
            //Se necesita definir un formato para poder cambiar el String a Date
            //En este caso buscar√° en el String a√±o-mes-dia hora:minutos:segundos

            //En este caso buscar√° en el String dia/mes/a√±o
            DateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
            fechaConvertida = formatoFecha.parse(stringFecha);

            sqlDate = new java.sql.Date(fechaConvertida.getTime());

        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null,e.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }

        try{
            int k = JOptionPane.showConfirmDialog(null,"¬øDesea Registrar esta Comanda?","Pregunta",JOptionPane.YES_OPTION);
            if(k == JOptionPane.YES_OPTION){
                CallableStatement cst = con.conectar().prepareCall("{call insertarDatos_Comanda(?,?,?,?,?)}");
                //Paramteros del procedimiento
                cst.setString(1,txtIDComanda.getText().toUpperCase());
                cst.setString(2,txtIDEmpleado.getText().toUpperCase());
                cst.setInt(3,Integer.parseInt(txtMesa.getText()));
                cst.setDate(4,sqlDate);
                cst.setString(5,txtComentarios.getText().toUpperCase());
                //Ejecurar el PreparedStatment.... se hace con ResultSet
                cst.execute();
                cst.close();

                cargarComandas();
                JOptionPane.showMessageDialog(null,"Comanda Registrada Correctamente, REGISTRE LOS PRODUCTOS DE LA COMANDA","Confirmar",JOptionPane.WARNING_MESSAGE);
                limpiezaTotalCompra();
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearComandaActionPerformed

    private void txtNombreEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEmpleadoActionPerformed

    private void jPanel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel23MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel23MouseClicked

    private void searchFieldComandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldComandaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldComandaMouseClicked

    private void searchFieldComandaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldComandaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldComandaKeyTyped

    private void BtnModificarDatosComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarDatosComandaActionPerformed
        if(txtIDComanda.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Seleccione una comanda de la tabla para ser modificada","Aviso",JOptionPane.WARNING_MESSAGE);
        }else{
            int confirmacion = JOptionPane.showConfirmDialog(null, "¬øSeguro que deseas modificar los datos de la comanda?","Confirmar",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            //Seleccionar Si devuelve 0
            //Seleccionar No devuelve 1
            //Seleccionar Cancelar devuelve 2
            if(confirmacion == JOptionPane.YES_OPTION){

                //En este caso buscar√° en el String dia/mes/a√±o
                String stringFecha = txtFechaComanda.getText();
                java.util.Date fechaConvertida = null;
                java.sql.Date sqlDate = null;
                try {
                    //Se necesita definir un formato para poder cambiar el String a Date
                    //En este caso buscar√° en el String a√±o-mes-dia hora:minutos:segundos

                    //En este caso buscar√° en el String dia/mes/a√±o
                    DateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                    fechaConvertida = formatoFecha.parse(stringFecha);
                                       
                    sqlDate = new java.sql.Date(fechaConvertida.getTime());

                } catch (ParseException e) {
                    JOptionPane.showMessageDialog(null,e.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
                }

                try{

                    CallableStatement cst = con.conectar().prepareCall("{call modificarDatosComanda(?,?,?,?,?)}");
                    //Paramteros del procedimiento
                    cst.setString(1,txtIDComanda.getText().toUpperCase());
                    cst.setString(2,txtIDEmpleado.getText().toUpperCase());
                    cst.setInt(3,Integer.parseInt(txtMesa.getText()));
                    cst.setDate(4,sqlDate);
                    cst.setString(5,txtComentarios.getText().toUpperCase());

                    cst.execute();
                    cst.close();
                    //Actualizar la JTable
                    cargarComandas();
                    limpiezaTotalCompra();
                    JOptionPane.showMessageDialog(null,"Datos de la Comanda Modificados Correctamente","Notificacion",JOptionPane.WARNING_MESSAGE);
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null,e.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
                }
            }
            else{
                limpiezaTotalCompra();
                JOptionPane.showMessageDialog(null,"Has cancelado la Modificacion","Aviso",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_BtnModificarDatosComandaActionPerformed

    private void jPanel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel30MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel30MouseClicked

    private void jPanel19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel19MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel19MousePressed

    private void txtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesaActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtComentariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComentariosKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComentariosKeyReleased

    private void btnVerDetalleComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetalleComandaActionPerformed
        VerDetalleComanda obj = new VerDetalleComanda();
        VerDetalleComanda.txtIDComandaDetalle.setText(txtIDComanda.getText());
        
        obj.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnVerDetalleComandaActionPerformed

    private void tablaComandasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaComandasKeyPressed
        cargarDatosFromTableToFields();
    }//GEN-LAST:event_tablaComandasKeyPressed

    private void tablaComandasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaComandasMousePressed
        cargarDatosFromTableToFields();
    }//GEN-LAST:event_tablaComandasMousePressed

    private void tablaComandasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaComandasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaComandasMouseClicked

    private void listaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaFocusLost
        panelLista.setVisible(false);
    }//GEN-LAST:event_listaFocusLost

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        try{
            ConsultaEmpleadoComanda cl = (ConsultaEmpleadoComanda)(Object)this.lista.getSelectedValue();

            this.txtIDEmpleado.setText(cl.getIDEmpleado());
            this.txtNombreEmpleado.setText(cl.getNombreEmpleado());
        }catch(NullPointerException ex){}
    }//GEN-LAST:event_listaValueChanged

    private void txtNombreEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoKeyTyped
        char ant,a;
        a=evt.getKeyChar();
        String h=txtNombreEmpleado.getText();
        if(txtNombreEmpleado.getText().length()>=30){
            evt.consume();
        }
        if(h.length()==0){
            if(a==(32)||a==46){
                evt.consume();
            }
        }
        String cara= String.valueOf(evt.getKeyChar());
        String nombrePattern="[a-zA-Z|\\s|.]";
        String cad;
        Pattern pattern = Pattern.compile(nombrePattern);
        Matcher matcher = pattern.matcher(cara);
        if(matcher.matches()==false){
            evt.consume();
        }
        if(txtNombreEmpleado.getText().length()>=1){
            ant=h.charAt(h.length()-1);
            if(ant==(32)||ant==46){
                if(ant==evt.getKeyChar()){
                    evt.consume();
                }
            }
            if(ant==46&&evt.getKeyChar()!=32){
                evt.consume();
            }
        }
    
        panelLista.setVisible(true);

        //Consulta SQL que se realizara
        String sql = "Select ID_Empleado,Nombre_Empleado from Empleados where Nombre_Empleado like'%" + txtNombreEmpleado.getText().toUpperCase() + "%'";
        //Crear un vector que almacenara el resultado de la consulta
        Vector<ConsultaEmpleadoComanda> leerDatosVector = ConexionLosCandiles.consultarEmpleadosComanda(sql);
        //Crear el modelo que se usara para la lista
        DefaultListModel lm = new DefaultListModel();
        //Recorrer y setear los datos del vector a la lista
        for(int i = 0; i < leerDatosVector.size(); i++){
            lm.addElement(leerDatosVector.elementAt(i));
        }
        lista.setModel(lm);
    }//GEN-LAST:event_txtNombreEmpleadoKeyTyped

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Principal obj = new Principal();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtIDComandaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDComandaKeyTyped
        if(txtIDComanda.getText().length()<3){
            txtIDComanda.setText("COM");
        }
        if(txtIDComanda.getText().length()>=6){
            evt.consume();
        }
        String cara= String.valueOf(evt.getKeyChar());
        String nombrePattern="[\\d]";
        String cad;
        Pattern pattern = Pattern.compile(nombrePattern);
        Matcher matcher = pattern.matcher(cara);
        if(matcher.matches()==false){
            evt.consume();
        }
        else{
            cad=txtIDComanda.getText();
            if(cad.length()>=3&&cad.length()<=6){
                if(cad.length()!=3){
                    nombrePattern="^[COM]+[\\d]{1,3}";
                    pattern = Pattern.compile(nombrePattern);
                    matcher = pattern.matcher(cad)  ;
                    if(matcher.matches()==false){evt.consume();}
                }
            }
            else{evt.consume();}
        }
    }//GEN-LAST:event_txtIDComandaKeyTyped

    private void txtMesaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMesaKeyTyped
        String cara= String.valueOf(evt.getKeyChar());
        String nombrePattern="[\\d]";
        String cad;
        Pattern pattern = Pattern.compile(nombrePattern);
        Matcher matcher = pattern.matcher(cara);
        if(matcher.matches()==false){
            evt.consume();
        }
    }//GEN-LAST:event_txtMesaKeyTyped

    private void txtTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyTyped
        String cara= String.valueOf(evt.getKeyChar());
        String nombrePattern="[\\d]";
        String cad;
        Pattern pattern = Pattern.compile(nombrePattern);
        Matcher matcher = pattern.matcher(cara);
        if(matcher.matches()==false){
            evt.consume();
        }
    }//GEN-LAST:event_txtTotalKeyTyped

    public void cargarComandas(){
        try{
            //PREPARAR LA jTable
            String titulos[] = {"N¬∞","ID Comandas","Id Empleado","Mesa","Fecha","Total","Comentarios"}; //Se definen los titulos que tendra la tabla
            comandasTableModel = new DefaultTableModel(null,titulos); //Se cargan los titulos a la tabla
            String fila [] = new String[8]; //Se define el tama√±o de columnas que tendra cada fila en la que se cargaran los datos

            //Crear un objeto de JTable para aplicar los hacks de ordenar :v
            JTable p = new JTable(comandasTableModel);

            //PREPARAR LA CONEXION A SQL Y EL OBJETO PARA EJECUTAR LA CONSULTA DE LA VISTA :v
            Statement smt=con.conectar().createStatement(); //Crea un objeto para poder hacer la consultar con ResultSet
            String consulta = "Select * from verDatosComandaVista";
            ResultSet r = smt.executeQuery(consulta); //Es el equivalente a la wea que devuelve el metodo listar() :v
            //Empezar a cargar los datos---
            int c = 1;
            while(r.next()){
                fila[0] = String.valueOf(c) + "¬∞";
                //A partir de aqui empieza a cargar los datos de la base de datos ala jTable
                fila[1] = r.getString(1);
                fila[2] = r.getString(2);
                fila[3] = r.getString(3);
                fila[4] = r.getString(4);
                fila[5] = r.getString(5);
                fila[6] = r.getString(6);
                comandasTableModel.addRow(fila); //Con este codigo agrega toda una fila de datos, la cual representa los datos de un docente
                c++;
            }
            r.close();

            tablaComandas.setModel(comandasTableModel); //Carga el modelo a la tabla que se definio anteriormente
            //Weas que ordenan :v
            TableRowSorter<TableModel> ordena = new TableRowSorter<TableModel>(comandasTableModel);
            tablaComandas.setRowSorter(ordena);
            this.tablaComandas.setModel(comandasTableModel);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,"Error al cargar los datos a la tabla: "+e.getMessage(),"ADVERTENCIA",JOptionPane.WARNING_MESSAGE);
        }
    }//Cierre cargarProveedor
    
    public void formatojTableComandas(){
        tablaComandas.getColumnModel().getColumn(0).setPreferredWidth(1); //Numeracion
        tablaComandas.getColumnModel().getColumn(1).setPreferredWidth(8);
        tablaComandas.getColumnModel().getColumn(2).setPreferredWidth(8);
        tablaComandas.getColumnModel().getColumn(3).setPreferredWidth(35);
        tablaComandas.getColumnModel().getColumn(4).setPreferredWidth(25);
        tablaComandas.getColumnModel().getColumn(5).setPreferredWidth(10);
        tablaComandas.getColumnModel().getColumn(6).setPreferredWidth(15);
    }//Cierre metodo formatojTableComandas
    
    public void limpiezaTotalCompra(){
        txtIDComanda.setText("");
        txtIDEmpleado.setText("");
        txtNombreEmpleado.setText("");
        txtMesa.setText("");
        txtComentarios.setText("");
        txtTotal.setText("");
        txtFechaComanda.setText("");
        searchFieldComanda.setText("");
        
        txtTotal.setText("0");
    }
    
    public void cargarDatosFromTableToFields(){
        //Metodo para mostrar los valores de la JTable en los Campos de Texto
        //1.- Guardar en una variable entero la fila que se selecciona
        int fila = this.tablaComandas.getSelectedRow();

        this.txtIDComanda.setText(tablaComandas.getValueAt(fila, 1).toString());
        this.txtIDEmpleado.setText(tablaComandas.getValueAt(fila,2).toString());
        this.txtMesa.setText(tablaComandas.getValueAt(fila,3).toString());
        this.txtFechaComanda.setText(tablaComandas.getValueAt(fila,4).toString());
        this.txtTotal.setText(tablaComandas.getValueAt(fila,5).toString());
        this.txtComentarios.setText(tablaComandas.getValueAt(fila,6).toString());
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Comandas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Comandas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Comandas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Comandas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Comandas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonTask BtnModificarDatosComanda;
    private org.edisoncor.gui.button.ButtonTask btnCrearComanda;
    private org.edisoncor.gui.button.ButtonTask btnVerDetalleComanda;
    private org.edisoncor.gui.button.ButtonColoredAction btnVolver;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lista;
    private jcMousePanel.jcMousePanel panelComandas;
    private javax.swing.JPanel panelLista;
    private javax.swing.JTextField searchFieldComanda;
    private javax.swing.JComboBox<String> searchFilterComanda;
    private javax.swing.JTable tablaComandas;
    public static javax.swing.JTextField txtComentarios;
    private javax.swing.JTextField txtFechaComanda;
    private javax.swing.JTextField txtIDComanda;
    public static javax.swing.JTextField txtIDEmpleado;
    private javax.swing.JTextField txtMesa;
    public static javax.swing.JTextField txtNombreEmpleado;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
